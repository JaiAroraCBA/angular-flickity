{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap a5210b4e22e8dcc69d9b","webpack:///./src/index.js","webpack:///./src/index.js?1f39","webpack:///./src/flickity.provider.js","webpack:///./src/flickity.provider.js?01f5","webpack:///./src/flickity.directive.js","webpack:///./src/flickity.directive.js?f624","webpack:///./src/flickity.service.js","webpack:///./src/flickity.service.js?ada5","webpack:///./src/flickityNext.directive.js","webpack:///./src/flickityNext.directive.js?96f3","webpack:///./src/flickityPrevious.directive.js","webpack:///./src/flickityPrevious.directive.js?eb57"],"names":[],"mappings":"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","file":"angular-flickity.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"angular-flickity\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-flickity\"] = factory();\n\telse\n\t\troot[\"angular-flickity\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap a5210b4e22e8dcc69d9b\n **/","'use strict';\n\nvar _flickity = require('./flickity.provider');\n\nvar _flickity2 = require('./flickity.directive');\n\nvar _flickity3 = require('./flickity.service');\n\nvar _flickityNext = require('./flickityNext.directive');\n\nvar _flickityPrevious = require('./flickityPrevious.directive');\n\nangular.module('bc.Flickity', []).provider('FlickityConfig', _flickity.FlickityConfigProvider).directive('bcFlickity', _flickity2.FlickityDirective).service('FlickityService', _flickity3.FlickityService).directive('bcFlickityNext', _flickityNext.FlickityNextDirective).directive('bcFlickityPrevious', _flickityPrevious.FlickityPreviousDirective);\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import { FlickityConfigProvider } from './flickity.provider'\nimport { FlickityDirective } from './flickity.directive';\nimport { FlickityService } from './flickity.service';\nimport { FlickityNextDirective } from './flickityNext.directive';\nimport { FlickityPreviousDirective } from './flickityPrevious.directive';\n\nangular.module('bc.Flickity', [])\n    .provider('FlickityConfig', FlickityConfigProvider)\n    .directive('bcFlickity', FlickityDirective)\n    .service('FlickityService', FlickityService)\n    .directive('bcFlickityNext', FlickityNextDirective)\n    .directive('bcFlickityPrevious', FlickityPreviousDirective)\n;\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/index.js\n **/","'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar FlickityConfigProvider = exports.FlickityConfigProvider = (function () {\n    function FlickityConfigProvider() {\n        _classCallCheck(this, FlickityConfigProvider);\n\n        // Define Flickity defaults\n        this.accessibility = true;\n        this.autoPlay = false;\n        this.cellAlign = 'center';\n        this.cellSelector = undefined;\n        this.contain = false;\n        this.draggable = true;\n        this.freeScroll = false;\n        this.freeScrollFriction = false;\n        this.selectedAttraction = .025;\n        this.friction = .28;\n        this.initialIndex = 0;\n        this.lazyLoad = true;\n        this.percentPosition = true;\n        this.prevNextButtons = true;\n        this.pageDots = true;\n        this.resize = true;\n        this.rightToLeft = false;\n        this.setGallerySize = true;\n        this.watchCSS = false;\n        this.wrapAround = false;\n        this.imagesLoaded = true;\n        this.asNavFor = true;\n    }\n\n    _createClass(FlickityConfigProvider, [{\n        key: '$get',\n        value: function $get() {\n            return this;\n        }\n    }]);\n\n    return FlickityConfigProvider;\n})();\n\n\n/** WEBPACK FOOTER **\n ** ./src/flickity.provider.js\n **/","export class FlickityConfigProvider {\n\n    constructor() {\n        // Define Flickity defaults\n        this.accessibility      = true;\n        this.autoPlay           = false;\n        this.cellAlign          = 'center';\n        this.cellSelector       = undefined;\n        this.contain            = false;\n        this.draggable          = true;\n        this.freeScroll         = false;\n        this.freeScrollFriction = false;\n        this.selectedAttraction = .025;\n        this.friction           = .28;\n        this.initialIndex       = 0;\n        this.lazyLoad           = true;\n        this.percentPosition    = true;\n        this.prevNextButtons    = true;\n        this.pageDots           = true;\n        this.resize             = true;\n        this.rightToLeft        = false;\n        this.setGallerySize     = true;\n        this.watchCSS           = false;\n        this.wrapAround         = false;\n        this.imagesLoaded       = true;\n        this.asNavFor           = true;\n    }\n\n\n\n\n    $get() {\n        return this;\n    }\n\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/flickity.provider.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.FlickityDirective = FlickityDirective;\n/* global Flickity */\n\n/**\n * Flickity.js\n * http://flickity.metafizzy.co/options.html\n *\n * Required markup\n *\n * <div bc-flickity flickity-options=\"{{ vm.options }}\">\n *   <div>\n *   <div>\n *   ...\n * </div>\n *\n */\nfunction FlickityDirective($timeout, FlickityConfig, FlickityService) {\n    'ngInject';\n\n    var directive = {\n        restrict: 'A',\n        scope: {},\n        bindToController: {\n            bcFlickity: '@?'\n        },\n        link: linkFunction,\n        controller: FlickityController,\n        controllerAs: 'vm'\n    };\n\n    return directive;\n\n    /**\n     * Link\n     */\n    function linkFunction($scope, $element, $attrs, $controller) {\n        'ngInject';\n\n        // Initialize Flickity\n        // Using a timeout ensures that any ng-repeats can finish running before we initialize\n\n        $timeout(function () {\n            var flickityInstance = FlickityService.create($element[0], $controller.flickityId, $controller.options);\n\n            // Expose the Flickity instance and ID\n            $controller.Flickity = flickityInstance.instance;\n            $controller.flickityId = flickityInstance.id;\n        });\n\n        // Clean up when being destroyed\n        var onDestroy = $scope.$on('$destroy', function (event) {\n            FlickityService.destroy($controller.flickityId);\n        });\n    }\n\n    /**\n     * Controller\n     */\n    function FlickityController() {\n\n        // Extend the default options with user configuration\n        this.options = angular.extend({}, FlickityConfig, angular.fromJson(this.bcFlickity));\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/flickity.directive.js\n **/","/* global Flickity */\n\n/**\n * Flickity.js\n * http://flickity.metafizzy.co/options.html\n *\n * Required markup\n *\n * <div bc-flickity flickity-options=\"{{ vm.options }}\">\n *   <div>\n *   <div>\n *   ...\n * </div>\n *\n */\nexport function FlickityDirective(\n    $timeout,\n    FlickityConfig, FlickityService\n) {\n    'ngInject';\n\n    const directive = {\n        restrict: 'A',\n        scope: {},\n        bindToController: {\n            bcFlickity: '@?',\n        },\n        link: linkFunction,\n        controller: FlickityController,\n        controllerAs: 'vm',\n    };\n\n    return directive;\n\n\n    /**\n     * Link\n     */\n    function linkFunction($scope, $element, $attrs, $controller) {\n        'ngInject';\n\n        // Initialize Flickity\n        // Using a timeout ensures that any ng-repeats can finish running before we initialize\n        $timeout(() => {\n            const flickityInstance =\n                FlickityService.create($element[0], $controller.flickityId, $controller.options);\n\n            // Expose the Flickity instance and ID\n            $controller.Flickity = flickityInstance.instance;\n            $controller.flickityId = flickityInstance.id;\n        });\n\n\n        // Clean up when being destroyed\n        const onDestroy = $scope.$on('$destroy', (event) => {\n            FlickityService.destroy($controller.flickityId);\n        });\n\n    }\n\n\n    /**\n     * Controller\n     */\n    function FlickityController() {\n\n        // Extend the default options with user configuration\n        this.options = angular.extend({}, FlickityConfig, angular.fromJson(this.bcFlickity));\n\n    }\n\n\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/flickity.directive.js\n **/","'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* global Flickity */\n\nvar FlickityService = exports.FlickityService = (function () {\n    function FlickityService($timeout) {\n        'ngInject';\n\n        _classCallCheck(this, FlickityService);\n\n        this.$timeout = $timeout;\n\n        this.instances = [];\n    }\n\n    /**\n     * Create a new Flickity instance\n     *\n     * @param {Element} element\n     * @param {String} id\n     * @param {Object} options\n     * @return {Element} element\n     */\n\n    _createClass(FlickityService, [{\n        key: 'create',\n        value: function create(element) {\n            var id = arguments.length <= 1 || arguments[1] === undefined ? this.instances.length + 1 : arguments[1];\n            var options = arguments[2];\n\n            // Define the new instance\n            var instance = {\n                id: id,\n                instance: new Flickity(element, options)\n            };\n\n            // Save this instance to the array\n            this.instances.push(instance);\n\n            return instance;\n        }\n\n        /**\n         * Destroy a Flickity instance\n         *\n         * @param {String} id\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy(id) {\n            var _this = this;\n\n            var pauseBeforeDestruction = 2000;\n            var flickityIndex = this._getFlickityIndex(id);\n\n            if (flickityIndex < 0) {\n                return false;\n            }\n\n            // Pause to allow other scope cleanup to occur\n            // NOTE: Without this pause, Flickity is being destroyed before the view containing the\n            // directive can leave view\n            this.$timeout(function () {\n\n                // Destroy the Flickity instance\n                _this.instances[flickityIndex].instance.destroy();\n\n                // Remove the instance from the array\n                _this.instances.splice(flickityIndex, 1);\n            }, pauseBeforeDestruction);\n        }\n\n        /**\n         * Move to the next slide\n         *\n         * @param {Bool} isWrapped\n         */\n\n    }, {\n        key: 'next',\n        value: function next(id, isWrapped) {\n            var flickityIndex = this._getFlickityIndex(id);\n\n            if (flickityIndex < 0) {\n                return false;\n            }\n\n            // Trigger the next slide\n            this.instances[flickityIndex].instance.next(isWrapped);\n        }\n\n        /**\n         * Move to the previous slide\n         *\n         * @param {Bool} isWrapped\n         */\n\n    }, {\n        key: 'previous',\n        value: function previous(id, isWrapped) {\n            var flickityIndex = this._getFlickityIndex(id);\n\n            if (flickityIndex < 0) {\n                return false;\n            }\n\n            // Trigger the next slide\n            this.instances[flickityIndex].instance.previous(isWrapped);\n        }\n\n        /**\n         * Select a slide\n         *\n         * @param {String} id\n         * @param {Number} index\n         * @param {Bool} isWrapped\n         * @param {Bool} isInstant\n         */\n\n    }, {\n        key: 'select',\n        value: function select(id, index) {\n            var isWrapped = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];\n            var isInstant = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];\n\n            var flickityIndex = this._getFlickityIndex(id);\n\n            if (flickityIndex < 0) {\n                return false;\n            }\n\n            // Trigger the next slide\n            this.instances[flickityIndex].instance.select(index, isWrapped, isInstant);\n        }\n\n        /**\n         * Get the current slide index\n         *\n         * @param {String} id\n         * @return {Number} index\n         */\n\n    }, {\n        key: 'getSelectedIndex',\n        value: function getSelectedIndex(id) {\n            var flickityIndex = this._getFlickityIndex(id);\n\n            if (flickityIndex < 0) {\n                return false;\n            }\n\n            // Return the current index\n            return this.instances[flickityIndex].instance.selectedIndex;\n        }\n\n        //\n        // Helper methods\n        //\n\n        /**\n         * Find the index for a Flickity instance\n         *\n         * @param {String} id\n         * @return {Number} flickityIndex\n         */\n\n    }, {\n        key: '_getFlickityIndex',\n        value: function _getFlickityIndex(id) {\n            var negativeIndexForUnfound = -1;\n\n            // If no instances exist, cancel\n            if (this.instances.length < 1) {\n\n                return negativeIndexForUnfound;\n            } else {\n\n                // Find the instance by ID\n                var index = this.instances.findIndex(matchesId);\n\n                if (index === false) {\n                    return negativeIndexForUnfound;\n                } else {\n                    return index;\n                }\n            }\n\n            // Test to match an item in an array based on the id\n            function matchesId(item, index, array) {\n                if (item.id === id) {\n                    return item;\n                }\n            }\n        }\n    }]);\n\n    return FlickityService;\n})();\n\n\n/** WEBPACK FOOTER **\n ** ./src/flickity.service.js\n **/","/* global Flickity */\nexport class FlickityService {\n\n    constructor(\n        $timeout\n    ) {\n        'ngInject';\n\n        this.$timeout = $timeout;\n\n        this.instances = [];\n\n    }\n\n\n\n\n    /**\n     * Create a new Flickity instance\n     *\n     * @param {Element} element\n     * @param {String} id\n     * @param {Object} options\n     * @return {Element} element\n     */\n    create(element, id = this.instances.length + 1, options) {\n\n        // Define the new instance\n        const instance = {\n            id: id,\n            instance: new Flickity(element, options),\n        };\n\n        // Save this instance to the array\n        this.instances.push(instance);\n\n        return instance;\n\n    }\n\n\n    /**\n     * Destroy a Flickity instance\n     *\n     * @param {String} id\n     */\n    destroy(id) {\n        const pauseBeforeDestruction = 2000;\n        const flickityIndex = this._getFlickityIndex(id);\n\n        if (flickityIndex < 0) {\n            return false;\n        }\n\n        // Pause to allow other scope cleanup to occur\n        // NOTE: Without this pause, Flickity is being destroyed before the view containing the\n        // directive can leave view\n        this.$timeout(() => {\n\n            // Destroy the Flickity instance\n            this.instances[flickityIndex].instance.destroy();\n\n            // Remove the instance from the array\n            this.instances.splice(flickityIndex, 1);\n\n        }, pauseBeforeDestruction);\n\n    }\n\n\n    /**\n     * Move to the next slide\n     *\n     * @param {Bool} isWrapped\n     */\n    next(id, isWrapped) {\n        const flickityIndex = this._getFlickityIndex(id);\n\n        if (flickityIndex < 0) {\n            return false;\n        }\n\n        // Trigger the next slide\n        this.instances[flickityIndex].instance.next(isWrapped);\n    }\n\n\n    /**\n     * Move to the previous slide\n     *\n     * @param {Bool} isWrapped\n     */\n    previous(id, isWrapped) {\n        const flickityIndex = this._getFlickityIndex(id);\n\n        if (flickityIndex < 0) {\n            return false;\n        }\n\n        // Trigger the next slide\n        this.instances[flickityIndex].instance.previous(isWrapped);\n    }\n\n\n    /**\n     * Select a slide\n     *\n     * @param {String} id\n     * @param {Number} index\n     * @param {Bool} isWrapped\n     * @param {Bool} isInstant\n     */\n    select(id, index, isWrapped = false, isInstant = false) {\n        const flickityIndex = this._getFlickityIndex(id);\n\n        if (flickityIndex < 0) {\n            return false;\n        }\n\n        // Trigger the next slide\n        this.instances[flickityIndex].instance.select(index, isWrapped, isInstant);\n    }\n\n\n    /**\n     * Get the current slide index\n     *\n     * @param {String} id\n     * @return {Number} index\n     */\n    getSelectedIndex(id) {\n        const flickityIndex = this._getFlickityIndex(id);\n\n        if (flickityIndex < 0) {\n            return false;\n        }\n\n        // Return the current index\n        return this.instances[flickityIndex].instance.selectedIndex;\n    }\n\n\n\n\n    //\n    // Helper methods\n    //\n\n\n    /**\n     * Find the index for a Flickity instance\n     *\n     * @param {String} id\n     * @return {Number} flickityIndex\n     */\n    _getFlickityIndex(id) {\n        const negativeIndexForUnfound = -1;\n\n        // If no instances exist, cancel\n        if (this.instances.length < 1) {\n\n            return negativeIndexForUnfound;\n\n        } else {\n\n            // Find the instance by ID\n            const index = this.instances.findIndex(matchesId);\n\n            if (index === false) {\n                return negativeIndexForUnfound;\n            } else {\n                return index;\n            }\n\n        }\n\n        // Test to match an item in an array based on the id\n        function matchesId(item, index, array) {\n            if (item.id === id) {\n                return item;\n            }\n        }\n\n    }\n\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/flickity.service.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.FlickityNextDirective = FlickityNextDirective;\nfunction FlickityNextDirective(FlickityService) {\n    'ngInject';\n\n    var directive = {\n        restrict: 'A',\n        require: '^bcFlickity',\n        scope: {\n            bcFlickityNext: '=?'\n        },\n        link: linkFunction\n    };\n\n    return directive;\n\n    /**\n     * Link\n     */\n    function linkFunction($scope, $element, $attrs, $controller) {\n        'ngInject';\n\n        // If no boolean was passed in, set to a default\n\n        if (typeof $scope.bcFlickityNext !== 'boolean') {\n            $scope.bcFlickityNext = true;\n        }\n\n        // Trigger next() method\n        $element.on('click', function () {\n            FlickityService.next($controller.flickityId, $scope.bcFlickityNext);\n        });\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/flickityNext.directive.js\n **/","export function FlickityNextDirective(\n    FlickityService\n) {\n    'ngInject';\n\n    const directive = {\n        restrict: 'A',\n        require: '^bcFlickity',\n        scope: {\n            bcFlickityNext: '=?',\n        },\n        link: linkFunction,\n    };\n\n    return directive;\n\n\n    /**\n     * Link\n     */\n    function linkFunction(\n        $scope, $element, $attrs, $controller\n    ) {\n        'ngInject';\n\n        // If no boolean was passed in, set to a default\n        if (typeof $scope.bcFlickityNext !== 'boolean') {\n            $scope.bcFlickityNext = true;\n        }\n\n        // Trigger next() method\n        $element.on('click', () => {\n            FlickityService.next($controller.flickityId, $scope.bcFlickityNext);\n        });\n\n    }\n\n\n\n}\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/flickityNext.directive.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.FlickityPreviousDirective = FlickityPreviousDirective;\nfunction FlickityPreviousDirective(FlickityService) {\n    'ngInject';\n\n    var directive = {\n        restrict: 'A',\n        require: '^bcFlickity',\n        scope: {\n            bcFlickityPrevious: '=?'\n        },\n        link: linkFunction\n    };\n\n    return directive;\n\n    /**\n     * Link\n     */\n    function linkFunction($scope, $element, $attrs, $controller) {\n        'ngInject';\n\n        // If no boolean was passed in, set to a default\n\n        if (typeof $scope.bcFlickityPrevious !== 'boolean') {\n            $scope.bcFlickityPrevious = true;\n        }\n\n        // Bind the click up to the required controller\n        $element.on('click', function () {\n            FlickityService.previous($controller.flickityId, $scope.bcFlickityPrevious);\n        });\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/flickityPrevious.directive.js\n **/","export function FlickityPreviousDirective(\n    FlickityService\n) {\n    'ngInject';\n\n    const directive = {\n        restrict: 'A',\n        require: '^bcFlickity',\n        scope: {\n            bcFlickityPrevious: '=?',\n        },\n        link: linkFunction,\n    };\n\n    return directive;\n\n\n    /**\n     * Link\n     */\n    function linkFunction(\n        $scope, $element, $attrs, $controller\n    ) {\n        'ngInject';\n\n        // If no boolean was passed in, set to a default\n        if (typeof $scope.bcFlickityPrevious !== 'boolean') {\n            $scope.bcFlickityPrevious = true;\n        }\n\n        // Bind the click up to the required controller\n        $element.on('click', () => {\n            FlickityService.previous($controller.flickityId, $scope.bcFlickityPrevious);\n        });\n\n    }\n\n\n\n}\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/flickityPrevious.directive.js\n **/"],"sourceRoot":""}